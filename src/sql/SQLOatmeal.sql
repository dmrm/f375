DROP TABLE AFFAIRS_USERS;
DROP TABLE AFFAIRS_EVIDENCE;
DROP TABLE MASSAGES;
DROP TABLE ORDERS;
DROP TABLE AFFAIRS;
DROP TABLE EVIDENCE;
DROP TABLE USERS;
DROP TABLE ROLES;
DROP TABLE STATUS;


DROP SEQUENCE USERS_IDENTITY;
DROP SEQUENCE AFFAIRS_IDENTITY;
DROP SEQUENCE ORDERS_IDENTITY;
DROP SEQUENCE MASSAGES_IDENTITY;

CREATE SEQUENCE USERS_IDENTITY INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE AFFAIRS_IDENTITY INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE ORDERS_IDENTITY INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE MASSAGES_IDENTITY INCREMENT BY 1 START WITH 1;

CREATE TABLE ROLES ( 
     ID       INTEGER PRIMARY KEY NOT NULL
  ,  NAME    VARCHAR2( 30 ) NOT NULL
);

CREATE TABLE USERS ( 
     ID INTEGER   PRIMARY KEY NOT NULL
  ,  FIRST_NAME  VARCHAR2( 30 ) NOT NULL
  ,  LAST_NAME  VARCHAR2( 30 ) NOT NULL
  ,  PAT_NAME  VARCHAR2( 30 )
  ,  PASSPORT   VARCHAR2( 30 ) NOT NULL UNIQUE
  ,  DATE_BD   TIMESTAMP NOT NULL
  ,  ROLE_ID   INTEGER REFERENCES "ROLES"( ID ) NOT NULL
  ,  DATE_REG   TIMESTAMP DEFAULT systimestamp NOT NULL
  ,  LOGIN     VARCHAR2( 40 ) NOT NULL
  ,  PASSWORD   VARCHAR2( 40 ) NOT NULL
  ,  FOTO     BLOB default empty_blob()
  ,  CONSTRAINT "LOGIN/PASS" UNIQUE( LOGIN, PASSWORD )
);

CREATE TABLE STATUS ( 
     ID       INTEGER PRIMARY KEY
  ,  DESCRIPTION VARCHAR2( 255 ) NOT NULL
);

CREATE TABLE ORDERS ( 
    ID       INTEGER PRIMARY KEY
  ,  TEXT     VARCHAR2( 255 ) NOT NULL
  ,  FROM_USR_ID INTEGER REFERENCES "USERS"( ID ) NOT NULL
  ,  TO_USR_ID   INTEGER REFERENCES "USERS"( ID )
  ,  TO_RLS_ID   INTEGER REFERENCES "ROLES"( ID ) NOT NULL
  ,  COMMENTS   VARCHAR2( 255 )
  ,  STATUS_ID  INTEGER REFERENCES "STATUS"( ID ) NOT NULL
);

CREATE TABLE EVIDENCE ( 
    ID       INTEGER PRIMARY KEY NOT NULL
  ,  LINK     BLOB DEFAULT empty_blob()
 );
/*написать ограничения на User_id(открывают дела только сыщики и детективы)*/
CREATE TABLE AFFAIRS ( 
     ID       INTEGER PRIMARY KEY NOT NULL
  ,  USER_ID  INTEGER REFERENCES "USERS"( ID ) NOT NULL        
  ,  DATE_OPEN   TIMESTAMP NOT NULL
  ,  PROGRESS   INTEGER CHECK( PROGRESS >=0 and PROGRESS <= 100 ) NOT NULL
);

CREATE TABLE AFFAIRS_USERS ( 
     AFFAIRS_ID  INTEGER REFERENCES "AFFAIRS"( ID ) NOT NULL
  ,  USERS_ID   INTEGER REFERENCES "USERS"( ID ) NOT NULL 
  ,  PRIMARY KEY( AFFAIRS_ID, USERS_ID )
);

CREATE TABLE AFFAIRS_EVIDENCE ( 
    AFFAIRS_ID     INTEGER REFERENCES "AFFAIRS"( ID ) NOT NULL
  ,  EVIDENCE_ID   INTEGER REFERENCES "EVIDENCE"( ID ) NOT NULL
  ,  PRIMARY KEY( AFFAIRS_ID, EVIDENCE_ID )
);

CREATE TABLE MASSAGES ( 
    ID       INTEGER PRIMARY KEY NOT NULL
  ,  USR_ID     INTEGER REFERENCES "USERS"( ID ) NOT NULL
  ,   AFFAIRS_ID  INTEGER REFERENCES "AFFAIRS"( ID ) NOT NULL
  ,  DATE_M     TIMESTAMP DEFAULT systimestamp
  ,  TEXT     VARCHAR2( 1024 )
 );

CREATE OR REPLACE TRIGGER USERS_IDENTITY BEFORE INSERT ON "USERS" FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT USERS_IDENTITY.NEXTVAL INTO :new.ID FROM DUAL;
  END IF;
END;
/
CREATE OR REPLACE TRIGGER AFFAIRS_IDENTITY BEFORE INSERT ON "AFFAIRS" FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT AFFAIRS_IDENTITY.NEXTVAL INTO :new.ID FROM DUAL;
  END IF;
END;
/
CREATE OR REPLACE TRIGGER ORDERS_IDENTITY BEFORE INSERT ON "ORDERS" FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT ORDERS_IDENTITY.NEXTVAL INTO :new.ID FROM DUAL;
  END IF;
END;
/
CREATE OR REPLACE TRIGGER MASSAGES_IDENTITY BEFORE INSERT ON "MASSAGES" FOR EACH ROW
BEGIN
  IF :new.ID IS NULL THEN
    SELECT MASSAGES_IDENTITY.NEXTVAL INTO :new.ID FROM DUAL;
  END IF;
END;
/

INSERT INTO ROLES ( ID, NAME ) VALUES(0, 'ANONIMUS' );
INSERT INTO ROLES ( ID, NAME ) VALUES(1, 'REGISTRAR' );
INSERT INTO ROLES ( ID, NAME ) VALUES(2, 'LONDONER' );
INSERT INTO ROLES ( ID, NAME ) VALUES(3, 'POLICEMAN' );
INSERT INTO ROLES ( ID, NAME ) VALUES(4, 'DETECTIVE' );
INSERT INTO ROLES ( ID, NAME ) VALUES(5, 'PRIVATE_DETECTIVE' );
INSERT INTO ROLES ( ID, NAME ) VALUES(6, 'COMMISSIONER' );
INSERT INTO ROLES ( ID, NAME ) VALUES(7, 'MAYOR' );

INSERT INTO STATUS ( ID, DESCRIPTION ) 
      VALUES ( 0, 'ACTIVE' );
INSERT INTO STATUS ( ID, DESCRIPTION ) 
      VALUES ( 1, 'REJECTED' );
INSERT INTO STATUS ( ID, DESCRIPTION ) 
      VALUES ( 2, 'ACCEPTED' );

INSERT INTO USERS ( ID, FIRST_NAME, LAST_NAME, PAT_NAME, PASSPORT, DATE_BD, ROLE_ID, DATE_REG, LOGIN, PASSWORD) 
      VALUES( 0,'ANONIMUS','ANONIMUS','ANONIMUS', 'TEST0', systimestamp,0,systimestamp,'ANONIMUS','ANONIMUS');
INSERT INTO USERS ( ID, FIRST_NAME, LAST_NAME, PAT_NAME, PASSPORT, DATE_BD, ROLE_ID, DATE_REG, LOGIN, PASSWORD) 
      VALUES( 1,'REGISTRAR','REGISTRAR','REGISTRAR', 'TEST1', systimestamp,1,systimestamp,'REGISTRAR1','REGISTRAR1');
INSERT INTO USERS ( ID, FIRST_NAME, LAST_NAME, PAT_NAME, PASSPORT, DATE_BD, ROLE_ID, DATE_REG, LOGIN, PASSWORD) 
      VALUES( 2,'LONDONER','LONDONER','LONDONER', 'TEST2', systimestamp,2,systimestamp,'LONDONER','LONDONER');
INSERT INTO USERS ( ID, FIRST_NAME, LAST_NAME, PAT_NAME, PASSPORT, DATE_BD, ROLE_ID, DATE_REG, LOGIN, PASSWORD) 
      VALUES( 3,'POLICEMAN','POLICEMAN','POLICEMAN', 'TEST3', systimestamp,3,systimestamp,'POLICEMAN','POLICEMAN');
INSERT INTO USERS ( ID, FIRST_NAME, LAST_NAME, PAT_NAME, PASSPORT, DATE_BD, ROLE_ID, DATE_REG, LOGIN, PASSWORD) 
      VALUES( 4,'DETECTIVE','DETECTIVE','DETECTIVE', 'TEST4', systimestamp,4,systimestamp,'DETECTIVE','DETECTIVE');
INSERT INTO USERS ( ID, FIRST_NAME, LAST_NAME, PAT_NAME, PASSPORT, DATE_BD, ROLE_ID, DATE_REG, LOGIN, PASSWORD) 
      VALUES( 5,'PRIVATE_DETECTIVE','PRIVATE_DETECTIVE','PRIVATE_DETECTIVE', 'TEST5', systimestamp,5,systimestamp,'PRIVATE_DETECTIVE','PRIVATE_DETECTIVE');
INSERT INTO USERS ( ID, FIRST_NAME, LAST_NAME, PAT_NAME, PASSPORT, DATE_BD, ROLE_ID, DATE_REG, LOGIN, PASSWORD) 
      VALUES( 6,'COMMISSIONER','COMMISSIONER','COMMISSIONER', 'TEST6', systimestamp,6,systimestamp,'COMMISSIONER','COMMISSIONER');
INSERT INTO USERS ( ID, FIRST_NAME, LAST_NAME, PAT_NAME, PASSPORT, DATE_BD, ROLE_ID, DATE_REG, LOGIN, PASSWORD) 
      VALUES( 7,'MAYOR','MAYOR','MAYOR', 'TEST7', systimestamp,7,systimestamp,'MAYOR','MAYOR');
      
INSERT INTO EVIDENCE ( ID) VALUES (0);
INSERT INTO AFFAIRS ( ID,USER_ID, DATE_OPEN, PROGRESS) VALUES (0, 1, systimestamp,0);
INSERT INTO AFFAIRS_USERS ( AFFAIRS_ID, USERS_ID) VALUES (0, 1);
INSERT INTO AFFAIRS_EVIDENCE ( AFFAIRS_ID, EVIDENCE_ID) VALUES (0, 0);
INSERT INTO MASSAGES ( USR_ID, AFFAIRS_ID, DATE_M, TEXT) 
      VALUES  ( 1, 0, systimestamp, 'TEXT');
/*Ограничения на поля*/      
INSERT INTO ORDERS ( TEXT, FROM_USR_ID, TO_USR_ID, TO_RLS_ID,COMMENTS, STATUS_ID ) 
      VALUES ( 'TEXT', 0, 0, 0, 'COMMENTS', 0 );

